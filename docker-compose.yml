version: '3'

services:
    app1:
        build:
            context: ./node
        container_name: app1
        entrypoint: dockerize -wait tcp://db:3306 -timeout 60s node index.js
        networks:
            - node-network
        volumes:
            - ./node:/usr/src/app
            - /usr/src/app/node_modules
        tty: true
        depends_on:
            - db
        ports:
            - "3000:3000"

    app2:
        build:
            context: ./node
        container_name: app2
        entrypoint: dockerize -wait tcp://db:3306 -timeout 60s node index.js
        networks:
            - node-network
        volumes:
            - ./node:/usr/src/app
            - /usr/src/app/node_modules
        tty: true
        depends_on:
            - db
        ports:
            - "3000:3000"

    app3:
        build:
            context: ./node
        container_name: app3
        entrypoint: dockerize -wait tcp://db:3306 -timeout 60s node index.js
        networks:
            - node-network
        volumes:
            - ./node:/usr/src/app
            - /usr/src/app/node_modules
        tty: true
        depends_on:
            - db
        ports:
            - "3000:3000"

    db:
        build:
            context: ./mysql
        command: --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        environment: 
            - MYSQL_DATABASE=nodedb
            - MYSQL_ROOT_PASSWORD=root
        networks:
            - node-network

    nginx:
        build:
            context: ./nginx
        image: javielrezende/nginx
        container_name: nginx
        depends_on:
            - app1
            - app2
            - app3
        networks: 
            - node-network
        ports: 
            - "8080:80"
networks:
    node-network:
        driver: bridge